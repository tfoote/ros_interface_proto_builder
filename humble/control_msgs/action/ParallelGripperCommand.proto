// generated from rosidl_adapter_proto/resource/idl.proto.em
// with input from control_msgs:action/ParallelGripperCommand.idl
// generated code does not contain a copyright notice

syntax = "proto3";

package control_msgs.action.pb;

import "builtin_interfaces/msg/Time.proto";
import "sensor_msgs/msg/JointState.proto";
import "unique_identifier_msgs/msg/UUID.proto";

option cc_generic_services = true;

message ParallelGripperCommand_Goal
{

  sensor_msgs.msg.pb.JointState command = 248184417;
}

message ParallelGripperCommand_SendGoal_Request
{

  unique_identifier_msgs.msg.pb.UUID                 goal_id = 108866210;
  control_msgs.action.pb.ParallelGripperCommand_Goal goal    = 484248182;
}

message ParallelGripperCommand_SendGoal_Response
{

  bool                           accepted = 371066354;
  builtin_interfaces.msg.pb.Time stamp    = 357477059;
}

message ParallelGripperCommand_Result
{


  //The current gripper state.
  sensor_msgs.msg.pb.JointState state        =  60025457;

  //position of each joint (radians or meters)
  //optional: velocity of each joint (radians or meters / second)
  //optional: effort of each joint (Newtons or Newton-meters)
  //True if the gripper is exerting max effort and not moving
  bool                          stalled      = 375736487;

  //True if the gripper position has reached the commanded setpoint
  bool                          reached_goal = 131262401;
}

message ParallelGripperCommand_GetResult_Request
{

  unique_identifier_msgs.msg.pb.UUID goal_id = 108866210;
}

message ParallelGripperCommand_GetResult_Response
{

  int32                                                status = 453014720;
  control_msgs.action.pb.ParallelGripperCommand_Result result = 325764348;
}

message ParallelGripperCommand_Feedback
{


  //The current gripper state.
  sensor_msgs.msg.pb.JointState state = 60025457;
}

message ParallelGripperCommand_FeedbackMessage
{

  unique_identifier_msgs.msg.pb.UUID                     goal_id  = 108866210;
  control_msgs.action.pb.ParallelGripperCommand_Feedback feedback = 304701367;
}

service ParallelGripperCommand
{
  rpc SendGoal (ParallelGripperCommand_SendGoal_Request) returns (ParallelGripperCommand_SendGoal_Response);
  rpc GetResult (ParallelGripperCommand_GetResult_Request) returns (ParallelGripperCommand_GetResult_Response);
}