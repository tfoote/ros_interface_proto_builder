// generated from rosidl_adapter_proto/resource/idl.proto.em
// with input from control_msgs:action/SingleJointPosition.idl
// generated code does not contain a copyright notice

syntax = "proto3";

package control_msgs.action.pb;

import "builtin_interfaces/msg/Duration.proto";
import "builtin_interfaces/msg/Time.proto";
import "std_msgs/msg/Header.proto";
import "unique_identifier_msgs/msg/UUID.proto";

option cc_generic_services = true;

message SingleJointPosition_Goal
{

  double                             position     = 103608496;
  builtin_interfaces.msg.pb.Duration min_duration = 118093469;
  double                             max_velocity = 268286937;
}

message SingleJointPosition_SendGoal_Request
{

  unique_identifier_msgs.msg.pb.UUID              goal_id = 108866210;
  control_msgs.action.pb.SingleJointPosition_Goal goal    = 484248182;
}

message SingleJointPosition_SendGoal_Response
{

  bool                           accepted = 371066354;
  builtin_interfaces.msg.pb.Time stamp    = 357477059;
}

message SingleJointPosition_Result
{

  uint32 structure_needs_at_least_one_member = 407246362;
}

message SingleJointPosition_GetResult_Request
{

  unique_identifier_msgs.msg.pb.UUID goal_id = 108866210;
}

message SingleJointPosition_GetResult_Response
{

  int32                                             status = 453014720;
  control_msgs.action.pb.SingleJointPosition_Result result = 325764348;
}

message SingleJointPosition_Feedback
{

  std_msgs.msg.pb.Header header   = 242399333;
  double                 position = 103608496;
  double                 velocity = 517533215;
  double                 error    = 501073964;
}

message SingleJointPosition_FeedbackMessage
{

  unique_identifier_msgs.msg.pb.UUID                  goal_id  = 108866210;
  control_msgs.action.pb.SingleJointPosition_Feedback feedback = 304701367;
}

service SingleJointPosition
{
  rpc SendGoal (SingleJointPosition_SendGoal_Request) returns (SingleJointPosition_SendGoal_Response);
  rpc GetResult (SingleJointPosition_GetResult_Request) returns (SingleJointPosition_GetResult_Response);
}