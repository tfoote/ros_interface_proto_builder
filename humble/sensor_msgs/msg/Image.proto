// generated from rosidl_adapter_proto/resource/idl.proto.em
// with input from sensor_msgs:msg/Image.idl
// generated code does not contain a copyright notice

syntax = "proto3";

package sensor_msgs.msg.pb;

import "std_msgs/msg/Header.proto";

//This message contains an uncompressed image
// (0, 0) is at top-left corner of image
message Image
{


  //Header timestamp should be acquisition time of image
  //Header frame_id should be optical frame of camera
  //origin of frame should be optical center of cameara
  //+x should point to the right in the image
  //+y should point down in the image
  //+z should point into to plane of the image
  //If the frame_id here and the frame_id of the CameraInfo
  //message associated with the image conflict
  //the behavior is undefined
  std_msgs.msg.pb.Header header       = 242399333;

  //image height, that is, number of rows
  fixed32                height       = 357434455;

  //image width, that is, number of columns
  fixed32                width        = 203053244;

  //The legal values for encoding are in file src/image_encodings.cpp
  //If you want to standardize a new string format, join
  //ros-users@lists.ros.org and send an email proposing a new encoding.
  //Encoding of pixels -- channel meaning, ordering, size
  //taken from the list of strings in include/sensor_msgs/image_encodings.hpp
  string                 encoding     = 139004147;

  //is this data bigendian?
  uint32                 is_bigendian = 155505754;

  //Full row length in bytes
  fixed32                step         =  62523895;

  //actual matrix data, size is (step * rows)
  bytes                  data         = 234097369;
}