// generated from rosidl_adapter_proto/resource/idl.proto.em
// with input from sensor_msgs:msg/PointCloud2.idl
// generated code does not contain a copyright notice

syntax = "proto3";

package sensor_msgs.msg.pb;

import "sensor_msgs/msg/PointField.proto";
import "std_msgs/msg/Header.proto";

//This message holds a collection of N-dimensional points, which may
// contain additional information such as normals, intensity, etc. The
// point data is stored as a binary blob, its layout described by the
// contents of the "fields" array.
// 
// The point cloud data may be organized 2d (image-like) or 1d (unordered).
// Point clouds organized as 2d images may be produced by camera depth sensors
// such as stereo or time-of-flight.
message PointCloud2
{


  //Time of sensor data acquisition, and the coordinate frame ID (for 3d points).
  std_msgs.msg.pb.Header                 header       = 242399333;

  //2D structure of the point cloud. If the cloud is unordered, height is
  //1 and width is the length of the point cloud.
  fixed32                                height       = 357434455;
  fixed32                                width        = 203053244;

  //Describes the channels and their layout in the binary data blob.
  repeated sensor_msgs.msg.pb.PointField fields       = 518386476;

  //Is this data bigendian?
  bool                                   is_bigendian = 155505754;

  //Length of a point in bytes
  fixed32                                point_step   = 171521213;

  //Length of a row in bytes
  fixed32                                row_step     = 405813661;

  //Actual point data, size is (row_step*height)
  bytes                                  data         = 234097369;

  //True if there are no invalid points
  bool                                   is_dense     = 286764710;
}