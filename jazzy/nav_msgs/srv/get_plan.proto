// generated from rosidl_adapter_proto/resource/idl.proto.em
// with input from nav_msgs:srv/GetPlan.idl
// generated code does not contain a copyright notice

syntax = "proto3";

package nav_msgs.srv.pb.jazzy;

import "geometry_msgs/msg/pose_stamped.proto";
import "nav_msgs/msg/path.proto";

option cc_generic_services = true;

message GetPlan_Request
{


  //The start pose for the plan
  geometry_msgs.msg.pb.jazzy.PoseStamped start     = 1;

  //The final pose of the goal position
  geometry_msgs.msg.pb.jazzy.PoseStamped goal      = 2;

  //If the goal is obstructed, how many meters the planner can
  //relax the constraint in x and y before failing.
  float                                  tolerance = 3;
}


message GetPlan_Response
{

  nav_msgs.msg.pb.jazzy.Path plan = 1;
}


service GetPlan
{
  rpc Call (GetPlan_Request) returns (GetPlan_Response);
}