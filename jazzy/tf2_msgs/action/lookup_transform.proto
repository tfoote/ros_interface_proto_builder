// generated from rosidl_adapter_proto/resource/idl.proto.em
// with input from tf2_msgs:action/LookupTransform.idl
// generated code does not contain a copyright notice

syntax = "proto3";

package tf2_msgs.action.pb.jazzy;

import "builtin_interfaces/msg/duration.proto";
import "builtin_interfaces/msg/time.proto";
import "geometry_msgs/msg/transform_stamped.proto";
import "tf2_msgs/msg/tf2_error.proto";
import "unique_identifier_msgs/msg/uuid.proto";

option cc_generic_services = true;

message LookupTransform_Goal
{

  string                                   target_frame = 1;
  string                                   source_frame = 2;
  builtin_interfaces.msg.pb.jazzy.Time     source_time  = 3;
  builtin_interfaces.msg.pb.jazzy.Duration timeout      = 4;

  //Advanced API
  builtin_interfaces.msg.pb.jazzy.Time     target_time  = 5;
  string                                   fixed_frame  = 6;

  //Whether or not to use the advanced API
  bool                                     advanced     = 7;
}


message LookupTransform_SendGoal_Request
{

  unique_identifier_msgs.msg.pb.jazzy.UUID      goal_id = 1;
  tf2_msgs.action.pb.jazzy.LookupTransform_Goal goal    = 2;
}


message LookupTransform_SendGoal_Response
{

  bool                                 accepted = 1;
  builtin_interfaces.msg.pb.jazzy.Time stamp    = 2;
}


message LookupTransform_Result
{

  geometry_msgs.msg.pb.jazzy.TransformStamped transform = 1;
  tf2_msgs.msg.pb.jazzy.TF2Error              error     = 2;
}


message LookupTransform_GetResult_Request
{

  unique_identifier_msgs.msg.pb.jazzy.UUID goal_id = 1;
}


message LookupTransform_GetResult_Response
{

  int32                                           status = 1;
  tf2_msgs.action.pb.jazzy.LookupTransform_Result result = 2;
}


message LookupTransform_Feedback
{

  uint32 structure_needs_at_least_one_member = 1;
}


message LookupTransform_FeedbackMessage
{

  unique_identifier_msgs.msg.pb.jazzy.UUID          goal_id  = 1;
  tf2_msgs.action.pb.jazzy.LookupTransform_Feedback feedback = 2;
}


service LookupTransform
{
  rpc SendGoal (LookupTransform_SendGoal_Request) returns (LookupTransform_SendGoal_Response);
  rpc GetResult (LookupTransform_GetResult_Request) returns (LookupTransform_GetResult_Response);
}