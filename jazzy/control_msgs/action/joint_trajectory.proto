// generated from rosidl_adapter_proto/resource/idl.proto.em
// with input from control_msgs:action/JointTrajectory.idl
// generated code does not contain a copyright notice

syntax = "proto3";

package control_msgs.action.pb.jazzy;

import "builtin_interfaces/msg/time.proto";
import "trajectory_msgs/msg/joint_trajectory.proto";
import "unique_identifier_msgs/msg/uuid.proto";

option cc_generic_services = true;

message JointTrajectory_Goal
{

  trajectory_msgs.msg.pb.jazzy.JointTrajectory trajectory = 1;
}


message JointTrajectory_SendGoal_Request
{

  unique_identifier_msgs.msg.pb.jazzy.UUID          goal_id = 1;
  control_msgs.action.pb.jazzy.JointTrajectory_Goal goal    = 2;
}


message JointTrajectory_SendGoal_Response
{

  bool                                 accepted = 1;
  builtin_interfaces.msg.pb.jazzy.Time stamp    = 2;
}


message JointTrajectory_Result
{

  uint32 structure_needs_at_least_one_member = 1;
}


message JointTrajectory_GetResult_Request
{

  unique_identifier_msgs.msg.pb.jazzy.UUID goal_id = 1;
}


message JointTrajectory_GetResult_Response
{

  int32                                               status = 1;
  control_msgs.action.pb.jazzy.JointTrajectory_Result result = 2;
}


message JointTrajectory_Feedback
{

  uint32 structure_needs_at_least_one_member = 1;
}


message JointTrajectory_FeedbackMessage
{

  unique_identifier_msgs.msg.pb.jazzy.UUID              goal_id  = 1;
  control_msgs.action.pb.jazzy.JointTrajectory_Feedback feedback = 2;
}


service JointTrajectory
{
  rpc SendGoal (JointTrajectory_SendGoal_Request) returns (JointTrajectory_SendGoal_Response);
  rpc GetResult (JointTrajectory_GetResult_Request) returns (JointTrajectory_GetResult_Response);
}