// generated from rosidl_adapter_proto/resource/idl.proto.em
// with input from control_msgs:action/ExecuteMotionPrimitiveSequence.idl
// generated code does not contain a copyright notice

syntax = "proto3";

package control_msgs.action.pb.jazzy;

import "builtin_interfaces/msg/time.proto";
import "control_msgs/msg/motion_primitive_sequence.proto";
import "unique_identifier_msgs/msg/uuid.proto";

option cc_generic_services = true;

message ExecuteMotionPrimitiveSequence_Goal
{

  control_msgs.msg.pb.jazzy.MotionPrimitiveSequence trajectory = 1;
}


message ExecuteMotionPrimitiveSequence_SendGoal_Request
{

  unique_identifier_msgs.msg.pb.jazzy.UUID                         goal_id = 1;
  control_msgs.action.pb.jazzy.ExecuteMotionPrimitiveSequence_Goal goal    = 2;
}


message ExecuteMotionPrimitiveSequence_SendGoal_Response
{

  bool                                 accepted = 1;
  builtin_interfaces.msg.pb.jazzy.Time stamp    = 2;
}


message ExecuteMotionPrimitiveSequence_Result
{

  sfixed32 error_code   = 1;
  string   error_string = 2;
}


message ExecuteMotionPrimitiveSequence_GetResult_Request
{

  unique_identifier_msgs.msg.pb.jazzy.UUID goal_id = 1;
}


message ExecuteMotionPrimitiveSequence_GetResult_Response
{

  int32                                                              status = 1;
  control_msgs.action.pb.jazzy.ExecuteMotionPrimitiveSequence_Result result = 2;
}


message ExecuteMotionPrimitiveSequence_Feedback
{

  uint32 current_primitive_index = 1;
}


message ExecuteMotionPrimitiveSequence_FeedbackMessage
{

  unique_identifier_msgs.msg.pb.jazzy.UUID                             goal_id  = 1;
  control_msgs.action.pb.jazzy.ExecuteMotionPrimitiveSequence_Feedback feedback = 2;
}


service ExecuteMotionPrimitiveSequence
{
  rpc SendGoal (ExecuteMotionPrimitiveSequence_SendGoal_Request) returns (ExecuteMotionPrimitiveSequence_SendGoal_Response);
  rpc GetResult (ExecuteMotionPrimitiveSequence_GetResult_Request) returns (ExecuteMotionPrimitiveSequence_GetResult_Response);
}