// generated from rosidl_adapter_proto/resource/idl.proto.em
// with input from visualization_msgs:msg/InteractiveMarkerControl.idl
// generated code does not contain a copyright notice

syntax = "proto3";

package visualization_msgs.msg.pb.jazzy;

import "geometry_msgs/msg/quaternion.proto";
import "visualization_msgs/msg/marker.proto";

//Represents a control that is to be displayed together with an interactive marker
message InteractiveMarkerControl
{


  //Identifying string for this control.
  //You need to assign a unique value to this to receive feedback from the GUI
  //on what actions the user performs on this control (e.g. a button click).
  string                                          name                           = 1;

  //Defines the local coordinate frame (relative to the pose of the parent
  //interactive marker) in which is being rotated and translated.
  //Default: Identity
  geometry_msgs.msg.pb.jazzy.Quaternion           orientation                    = 2;
  uint32                                          orientation_mode               = 3;
  uint32                                          interaction_mode               = 4;

  //If true, the contained markers will also be visible
  //when the gui is not in interactive mode.
  bool                                            always_visible                 = 5;

  //Markers to be displayed as custom visual representation.
  //Leave this empty to use the default control handles.
  //
  //Note:
  //- The markers can be defined in an arbitrary coordinate frame,
  //  but will be transformed into the local frame of the interactive marker.
  //- If the header of a marker is empty, its pose will be interpreted as
  //  relative to the pose of the parent interactive marker.
  repeated visualization_msgs.msg.pb.jazzy.Marker markers                        = 6;

  //In VIEW_FACING mode, set this to true if you don't want the markers
  //to be aligned with the camera view point. The markers will show up
  //as in INHERIT mode.
  bool                                            independent_marker_orientation = 7;

  //Short description (< 40 characters) of what this control does,
  //e.g. "Move the robot".
  //Default: A generic description based on the interaction mode
  string                                          description                    = 8;
}
